~~~ Path manipulation ~~~
module strings

struct StringBox
    owner String value

    new!(user Array{Char} chars)
        new String{chars.length() + 1} value(user chars)!
        self.value := value

func ! join(user StringBox separator, user ds.List{StringBox} elements, user String out)
    var ds.ListIterator{StringBox} iter(user elements)
    user StringBox? item
    var Bool has-another-item
    iter.step()->(user item, var has-another-item)!
    if has-another-item
        out.concat(user item)!
        loop
            while has-another-item?
            iter.step()->(var item, var has-another-item)
            if has-another-item?
                out.append(user separator)
                out.append(user item)

func main()
    var ds.List{StringBox} elements
    elements.append(owner StringBox(user "one")!)!
    elements.append(owner StringBox(user "two")!)!
    elements.append(owner StringBox(user "three")!)!
    join(user ", ", user elements, var out-str)
    print(user out-str)

[;
struct Path
    var List{String} nodes
    var Char separator

    func str(user String out-str)
;]
        
        

