~~~ String manipulation tools ~~~
module strings

struct StringBox
    owner String value

    new!(user Array{Char} chars)
        new String{chars.length() + 1} value(user chars)!
        self.value := value

func ! join(user StringBox separator, user ds.List{StringBox} elements, user String out)
    var ds.ListIterator{StringBox} iter(user elements)
    user StringBox? item
    var Bool has-another-item
    iter.step()->(user item, var has-another-item)!
    if has-another-item
        out.concat(user item!.value)!
        loop
            while has-another-item
            iter.step()->(user item, var has-another-item)!
            if has-another-item
                out.concat(user separator.value)!
                out.concat(user item!.value)!

test simple-join()
    var ds.List{StringBox} elements
    elements.append(owner StringBox(user "one")!)!
    elements.append(owner StringBox(user "two")!)!
    elements.append(owner StringBox(user "three")!)!
    var String{20} out-str
    join(user StringBox(user ", ")!, user elements, user out-str)!
    assert! out-str.equal(user "one, two, three")
