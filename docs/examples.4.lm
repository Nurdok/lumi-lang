module examples

; fibonacci start
func fibonacci(copy Int n)->(var Int res)
    var Int prev(copy 1)
    res := 0
    for _ in n
        var Int sum(copy res + prev)
        prev := res
        res := sum

; fibonacci end

; Complex start
struct Complex
    var Int real
    var Int imaginary

    func str(user String out-str)
        self.real.str(user out-str)
        out-str.append(copy ' ')
        if self.imaginary > 0
            out-str.append(copy '+')
        else
            out-str.append(copy '-')
        out-str.append(copy ' ')
        var String{128} imaginary-str
        if self.imaginary > 0
            self.imaginary.str(user imaginary-str)
        else
            (- self.imaginary).str(user imaginary-str)
        out-str.concat(user imaginary-str)
        out-str.append(copy 'i')

func usage-example()
    var Complex complex
    complex.real := 5
    complex.imaginary := 3
    var String{1024} complex-str
    complex.str(user complex-str)
    sys.println(user complex-str)

; Complex end

main
    fibonacci(copy 3)
    usage-example()
