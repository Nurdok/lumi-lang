{## MR4 compiler integration main test file

This file should be stand-alone.

Testing multiline documentation
confused by # or } or }# or # } ?
#}

{# Test
multiline
comment
#}

## Test Single line documentation
# Test Single line comment

# Test global variables
var Int global-int
# var Int CONSTANT-INT(23)
user String global-string
# user String CONSTANT-STRING("a constant string")


# Test functions
func test-simple-function()
  # sys.print(user "I am test func")


func test-variable(copy Int i, user String text, user Array{Int} arr)
  var Int x
  user String s
  owner Array{Int} a
  user TestStruct t
  var TestStruct tv
  var String{12} sv
  var Array{12:Int} ia
  var Array{12:TestStruct} ta
  var Array{12:String{7}} sa
  new TestStruct tn
  new String{arr[0]} sn
  new Array{arr[0]:Int} ian
  new Array{arr[0]:TestStruct} tan
  new Array{arr[0]:String{arr[1]}} san
  var Int ix(arr[0])
  user String is(text)
  var String{12} isv("some string")
  new String{i} isn(text)
  assert x = 0
  assert s?
  assert a?
  assert t?
  assert tv?
  assert sv?
  assert ia?
  assert ta?
  assert sa?
  assert tn?
  assert sn?
  assert ian?
  assert tan?
  assert san?
  assert ix = 0
  assert is?
  assert isv?
  assert isn?


func test-complex-function(
    copy Int num, user String text)->(copy Int out-num, user String out-text)
  {# Test
  multiline
  comment #}

  # Test Single line comment

  ## Test Single line documentation
  # Test Single line comment
  out-num := num
  out-text := text


# Test types
struct TestStruct
  ## dosumentation test
  var Int num
  
  {## Test
  multiline
  documentation #}
  user String text
  
  # comment test
  
  func set(copy Int x, user String s)
    self.num := x
    self.text := s
  
  {# Test
  multiline
  comment #}
  
  func get()->(copy Int x, user String s)
    x := self.num
    s := self.text


main
  # test-simple-function()
