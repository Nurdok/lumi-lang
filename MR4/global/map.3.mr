## MR4 compiler - Generic mappings

## Maps from a string name to a generic object
static Name-map{Generic}
  owner Name-map-node{Generic} first
  owner Name-map-node{Generic} last
  
  ## Add `name` -> `value` mapping
  func inst add(user String name, owner Generic value)
    new Name-map-node{Generic} node
    node.init(user name, owner value)
    if ? self.last
      self.last.next := node
    else
      self.first := node
    self.last := node
  
  ## Find a value mapped from `name`, return empty if not exists
  func inst find(user String name):(user Generic value)
    user Name-map-node{Generic} node(self.first)
    do
      while ? node
      if node.name.equal(user name)
        value := node.value
        return
      node := node.next
    value := _


static Name-map-node{Generic}
  owner Name-map-node{Generic} next
  user String name
  owner Generic value
  
  func inst init(user String name, owner Generic value)
    self.name := name
    self.value := value
