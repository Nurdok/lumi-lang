struct Test
    var Int num
    weak Test t
    var Func{()} fun
    new(copy Int num)
    func meth()
class Ta(Test)
    var Int numa
    func inst metha()
    func dynamic dyn()
class Tb(Ta)
    var Int numb
    func inst methb()
    func dynamic dyn()
class Tc(Tb)
    var Int numc
    func inst methc()
    func dynamic dyn()
struct Data{Generic}
    weak Generic item
    weak Array{Generic} arr
    func set(owner Generic item, user Array{Generic} arr)
    func get()->(weak Generic item)

func fun0()
func fun1(copy Int x, user String s, owner String o)
func fun2()->(owner String s, var Int x)
func fun3(copy Int x)->(owner String s)
func fun4(copy Int x)
func fun5(copy Int x)->(var Int y)
func fun6(copy Int x, copy Int y)->(var Int n, var Int m)
func fun7(user Tb tb)->(weak Tb tbo)

var Int i
var Char c
var Bool b
weak String str
weak Array{Int} arr
owner File fobj
weak Test t
weak Ta ta
owner Tb tb
weak Tc tc
weak Data{String} d
weak Array{String} sarr

func mock()->(owner String so, var Int io, user Test to, user Tc tco)
    